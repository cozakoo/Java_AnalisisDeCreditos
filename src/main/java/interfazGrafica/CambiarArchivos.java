/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfazGrafica;

import Utiles.Mensajes;
import com.ministerio.analisis.credito.CsvLiresto;
import com.ministerio.analisis.credito.DataBase;
import com.ministerio.analisis.credito.Excel;
import com.opencsv.exceptions.CsvException;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.*;

/**
 *
 * @author dgc06
 */
public class CambiarArchivos extends javax.swing.JFrame {

    /**
     * Creates new form SesionUsuario
     */
    DataBase db = null;

    public CambiarArchivos(DataBase db) {
        this.db = db;
        initComponents();
        configVentana();
        //CONFIG LOADING
        loadingCreditojLabel.setVisible(false);
        loadingLirestojLabel1.setVisible(false);

        try {
            cargarDatoSession();
            cargarImagenes();
        } catch (SQLException ex) {
            Logger.getLogger(CambiarArchivos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void cargarDatoSession() throws SQLException {
        ResultSet rs = db.consulta("SELECT * FROM fecha_creacion");
        while (rs.next()) {
            System.out.println((String) rs.getObject(1));

            if ("EXCEL".equals((String) rs.getObject(1))) {
                System.out.println("ENTRE");
                fechaSubidaCredito.setText((String) rs.getObject(2));
                descripCredito.setText((String) rs.getObject(4));
            }
            if ("LIRESTO".equals((String) rs.getObject(1))) {
                System.out.println("ENTRE LI");
                fechSubidaLiresto.setText((String) rs.getObject(2));
                String fecha = (String) rs.getObject(3);
                fecha = fecha.substring(1, fecha.length());

                descripLiresto.setText((String) rs.getObject(4));
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.ButtonGroup buttonGroup1 = new javax.swing.ButtonGroup();
        javax.swing.JProgressBar jProgressBar1 = new javax.swing.JProgressBar();
        javax.swing.JButton jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fechaSubidaCredito = new javax.swing.JLabel();
        descripCredito = new javax.swing.JLabel();
        descripLiresto = new javax.swing.JLabel();
        fechSubidaLiresto = new javax.swing.JLabel();
        jlabel1 = new javax.swing.JLabel();
        jlabel2 = new javax.swing.JLabel();
        cambiarCreditojButton = new javax.swing.JButton();
        cambiarLirestojButton = new javax.swing.JButton();
        volverjLabel = new javax.swing.JLabel();
        loadingCreditojLabel = new javax.swing.JLabel();
        loadingLirestojLabel1 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.setFocusable(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel2.setText("Posees los siguientes archivos cargados en el sistema");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 440, 20));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, -1, -1));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, -1, -1));

        fechaSubidaCredito.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        fechaSubidaCredito.setText("fecha_subida:");
        jPanel1.add(fechaSubidaCredito, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 200, -1));

        descripCredito.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        descripCredito.setText("descrip");
        jPanel1.add(descripCredito, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 200, -1));

        descripLiresto.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        descripLiresto.setText("descripcion");
        jPanel1.add(descripLiresto, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 200, 180, -1));

        fechSubidaLiresto.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        fechSubidaLiresto.setText("fecha_subida");
        jPanel1.add(fechSubidaLiresto, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 180, -1));

        jlabel1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jlabel1.setText("Fecha de subida:");
        jPanel1.add(jlabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 200, -1));

        jlabel2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jlabel2.setText("Fecha de subida:");
        jPanel1.add(jlabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, 200, -1));

        cambiarCreditojButton.setBackground(new java.awt.Color(255, 51, 0));
        cambiarCreditojButton.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        cambiarCreditojButton.setForeground(new java.awt.Color(255, 255, 255));
        cambiarCreditojButton.setText("CAMBIAR");
        cambiarCreditojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarCreditojButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cambiarCreditojButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, -1, -1));

        cambiarLirestojButton.setBackground(new java.awt.Color(255, 51, 0));
        cambiarLirestojButton.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        cambiarLirestojButton.setForeground(new java.awt.Color(255, 255, 255));
        cambiarLirestojButton.setText("CAMBIAR");
        cambiarLirestojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarLirestojButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cambiarLirestojButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, -1, -1));

        volverjLabel.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        volverjLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\dgc06\\Documents\\nuevo repo\\Validacion MAIN\\validacionJava\\images\\izquierda.png")); // NOI18N
        volverjLabel.setText(" Volver");
        volverjLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volverjLabelMouseClicked(evt);
            }
        });
        jPanel1.add(volverjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 460, -1, -1));

        loadingCreditojLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\dgc06\\Documents\\nuevo repo\\Validacion MAIN\\validacionJava\\images\\loading_boton_1.gif")); // NOI18N
        jPanel1.add(loadingCreditojLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, -1, -1));

        loadingLirestojLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\dgc06\\Documents\\nuevo repo\\Validacion MAIN\\validacionJava\\images\\loading_boton_1.gif")); // NOI18N
        jPanel1.add(loadingLirestojLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 270, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 580));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cambiarCreditojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarCreditojButtonActionPerformed
        // TODO add your handling code here:

        CambiarArchivos m = this;
        new Thread() {
            @Override
            public void run() {
                JFileChooser fileChooser = new JFileChooser();
                configurarFileChooser(fileChooser, new String[]{"xls", "xlsx"}, "Archivos de Excel");
                m.setVisible(false);
                // Abre el cuadro de diálogo para seleccionar un archivo
                int returnValue = fileChooser.showOpenDialog(null);

                // Verifica si se seleccionó un archivo
                if (returnValue == javax.swing.JFileChooser.APPROVE_OPTION) {
                    m.setVisible(true);
                    File selectedFile = fileChooser.getSelectedFile();
                    String ruta = selectedFile.getAbsolutePath();
                    String nombre = selectedFile.getName();
                    Excel credito = new Excel(ruta, nombre);

                    try {
                        volverjLabel.setEnabled(false);
                        cambiarCreditojButton.setEnabled(false);
                        loadingCreditojLabel.setVisible(true);
                        while (db.estaEnUso()) {
                            this.sleep(10000);
                        }
                        System.out.println("pase soy cred");
                        db.setEstaEnUso(true);
                        db.cleanCredito();
                        db.cleanFechaCreacion("EXCEL");
                        db.importarExcelCredito(credito);
                        db.setEstaEnUso(false);
                        cambiarCreditojButton.setEnabled(true);
                        loadingCreditojLabel.setVisible(false);
//                            checkCredito.setVisible(true);
                        cargarDatoSession();
                        m.setVisible(true);
                        if (cambiarLirestojButton.isEnabled()) {
                            volverjLabel.setEnabled(true);
                        }
//                            importarCredito.setEnabled(false);
                    } catch (Exception ex) {

                        if (ex instanceof java.io.FileNotFoundException) {
                            Mensajes.error("Cierre el Excel para poder procesarlo");
                        } else {
                            Mensajes.error("Excel invalido, no cumple el formato");
                        }
//                            loadingCredito.setVisible(false);
                        db.setEstaEnUso(false);
//                            importarCredito.setEnabled(true);
                        // Logger.getLogger(FormInicio.class.getName()).log(Level.SEVERE, null, ex);

                    }
                } else {
                    m.setVisible(true);
                    System.out.println("No se seleccionó ningún archivo.");
                }
            }
        }.start();

    }//GEN-LAST:event_cambiarCreditojButtonActionPerformed

    private void volverjLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverjLabelMouseClicked
        // TODO add your handling code here:
        if (volverjLabel.isEnabled()) {
            this.dispose();
            new Menu(db).setVisible(true);
        }
    }//GEN-LAST:event_volverjLabelMouseClicked

    private void cambiarLirestojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarLirestojButtonActionPerformed

        if (cambiarLirestojButton.isEnabled()) {
            CambiarArchivos m = this;
            new Thread() {

                @Override
                public void run() {
                    JFileChooser fileChooser = new JFileChooser();
                    configurarFileChooser(fileChooser, new String[]{"csv"}, "Archivos de CSV");
                    m.setVisible(false);
                    int returnValue = fileChooser.showOpenDialog(null);

                    // Verifica si se seleccionó un archivo
                    if (returnValue == javax.swing.JFileChooser.APPROVE_OPTION) {

                        try {
                            volverjLabel.setEnabled(false);
                            cambiarLirestojButton.setEnabled(false);
                            m.setVisible(true);
                            File selectedFile = fileChooser.getSelectedFile();
                            String ruta = selectedFile.getAbsolutePath();
                            String nombre = selectedFile.getName();

                            CsvLiresto liresto;
                            liresto = new CsvLiresto(ruta, nombre);
                            if (liresto.isCorrect()) {
                                loadingLirestojLabel1.setVisible(true);
                                while (db.estaEnUso()) {
                                    try {
                                        this.sleep(10000);
                                    } catch (InterruptedException ex) {
                                        Logger.getLogger(FormInicio.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                                System.out.println("pase");
                                db.setEstaEnUso(true);
                                db.cleanLiresto();
                                db.cleanFechaCreacion("LIRESTO");
                                db.importarLiresto(liresto);
                                db.setEstaEnUso(false);
                                loadingLirestojLabel1.setVisible(false);
                                cambiarLirestojButton.setEnabled(
                                        true);
                                cargarDatoSession();

                            } else {
                                System.err.println("error");
                                Mensajes.error("Liresto invalido");
                                cargarDatoSession();
                                volverjLabel.setEnabled(true);
                                cambiarLirestojButton.setEnabled(true);
                            }

                            if (cambiarCreditojButton.isEnabled()) {
                                volverjLabel.setEnabled(true);
                            }

                        } catch (IOException | NumberFormatException ex) {
                            Mensajes.error("Liresto invalido");
                            loadingLirestojLabel1.setVisible(false);
                            db.setEstaEnUso(false);
                            cambiarLirestojButton.setEnabled(true);

                        } catch (CsvException | SQLException ex) {
                            Mensajes.error("Liresto invalido");
                            cambiarLirestojButton.setEnabled(true);
                            Logger.getLogger(FormInicio.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } else {
                        m.setVisible(true);
                    }

                }
            }.start();
            //hilo
        }
    }//GEN-LAST:event_cambiarLirestojButtonActionPerformed

    private void configurarFileChooser(JFileChooser fileChooser, String[] extensiones, String descripcion) {
        String userDownloadsDir = System.getProperty("user.home") + File.separator + "Downloads";
        fileChooser.setCurrentDirectory(new File(userDownloadsDir));

        // Ajusta el tamaño del JFileChooser (opcional)
        fileChooser.setPreferredSize(new Dimension(800, 600));  // Cambia los valores según tus necesidades

        // Crea un filtro para las extensiones especificadas
        FileFilter filtro = new FileNameExtensionFilter(descripcion, extensiones);
        fileChooser.addChoosableFileFilter(filtro);

        // Deshabilita la opción "Todos los archivos"
        fileChooser.setAcceptAllFileFilterUsed(false);
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton cambiarCreditojButton;
    javax.swing.JButton cambiarLirestojButton;
    javax.swing.JLabel descripCredito;
    javax.swing.JLabel descripLiresto;
    javax.swing.JLabel fechSubidaLiresto;
    javax.swing.JLabel fechaSubidaCredito;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JPanel jPanel1;
    javax.swing.JLabel jlabel1;
    javax.swing.JLabel jlabel2;
    javax.swing.JLabel loadingCreditojLabel;
    javax.swing.JLabel loadingLirestojLabel1;
    javax.swing.JLabel volverjLabel;
    // End of variables declaration//GEN-END:variables

    private void cargarImagenes() {
        String dirActual = System.getProperty("user.dir");
        jLabel3.setIcon(new javax.swing.ImageIcon(dirActual + "\\images\\doc60px.png"));
        jLabel4.setIcon(new javax.swing.ImageIcon(dirActual + "\\images\\doc60px.png"));

        loadingCreditojLabel.setIcon(new javax.swing.ImageIcon(dirActual + "\\images\\loading_boton_1.gif"));
        loadingLirestojLabel1.setIcon(new javax.swing.ImageIcon(dirActual + "\\images\\loading_boton_1.gif"));
        volverjLabel.setIcon(new javax.swing.ImageIcon(dirActual + "\\images\\izquierda.png"));
    }

    private void configVentana() {
        MouseAdapter mouseAdapter = new MouseAdapter() {
            private Point offset;

            @Override
            public void mousePressed(MouseEvent e) {
                offset = e.getPoint(); // Guarda la posición del ratón respecto a la esquina superior izquierda de la ventana
            }

            @Override
            public void mouseDragged(MouseEvent e) {
                Point location = getLocation();
                setLocation(location.x + e.getX() - offset.x, location.y + e.getY() - offset.y);
            }
        };

        addMouseListener(mouseAdapter);
        addMouseMotionListener(mouseAdapter);

    }
}
